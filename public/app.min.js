angular.module("app",["ngAnimate","ngTouch","ui.bootstrap","ui.router","ngStorage","oc.lazyLoad","app.services"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$localStorageProvider","$ocLazyLoadProvider","$compileProvider","baseUrlProvider",function(e,t,r,o,n,a,l,s){function i(e){return["$ocLazyLoad","$$animateJs",function(t){return t.load(e)}]}s.set("https://meanbp.herokuapp.com"),l.debugInfoEnabled(!1),n.setKeyPrefix("app"),o.interceptors.push("jwtInterceptor"),o.interceptors.push("jwtResponseInterceptor"),t.otherwise("/"),e.state("home",{url:"/",templateUrl:"components/statics/home.html"}).state("auth",{"abstract":!0,template:"<ui-view></ui-view>",resolve:{module:i("components/auth/auth.min.js")}}).state("auth.login",{url:"/login",controller:"loginCtrl as vm",templateUrl:"components/auth/login.html",resolve:{user:["$q","Auth",function(e,t){var r=t.currentUser();if(r)return e.reject({redirect:"profile"})}]}}).state("auth.signup",{url:"/signup",controller:"signupCtrl as vm",templateUrl:"components/auth/signup.html"}).state("auth.reset",{url:"/reset",controller:"resetPassCtrl as vm",templateUrl:"components/auth/reset.html"}).state("profile",{url:"/profile",controller:"profileCtrl as vm",templateUrl:"components/profile/profile.html",resolve:{module:i("components/profile/profile.min.js"),user:["$q","Auth",function(e,t){var r=t.currentUser();return r?r.$promise:e.reject({redirect:"auth.login"})}]}}),r.html5Mode(!0).hashPrefix("!")}]).run(["$rootScope","$state",function(e,t){e.$on("$stateChangeError",function(e,r,o,n,a,l){l.redirect?t.go(l.redirect):t.go("error",{status:l.status})})}]),angular.module("app.components",[]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5taW4uanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkaHR0cFByb3ZpZGVyIiwiJGxvY2FsU3RvcmFnZVByb3ZpZGVyIiwiJG9jTGF6eUxvYWRQcm92aWRlciIsIiRjb21waWxlUHJvdmlkZXIiLCJiYXNlVXJsUHJvdmlkZXIiLCJsYXp5TG9hZCIsImRlcGVuZGVuY2llcyIsIiRvY0xhenlMb2FkIiwibG9hZCIsInNldCIsImRlYnVnSW5mb0VuYWJsZWQiLCJzZXRLZXlQcmVmaXgiLCJpbnRlcmNlcHRvcnMiLCJwdXNoIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJ0ZW1wbGF0ZVVybCIsImFic3RyYWN0IiwidGVtcGxhdGUiLCJyZXNvbHZlIiwiY29udHJvbGxlciIsInVzZXIiLCIkcSIsIkF1dGgiLCJjdXJyZW50VXNlciIsInJlamVjdCIsInJlZGlyZWN0IiwiJHByb21pc2UiLCJodG1sNU1vZGUiLCJoYXNoUHJlZml4IiwicnVuIiwiJHJvb3RTY29wZSIsIiRzdGF0ZSIsIiRvbiIsImV2dCIsInRvIiwidG9QYXJhbXMiLCJmcm9tIiwiZnJvbVBhcmFtcyIsImVycm9yIiwiZ28iLCJzdGF0dXMiXSwibWFwcGluZ3MiOiJBQUNBQSxRQUFRQyxPQUFPLE9BQ1gsWUFDQSxVQUNBLGVBQ0EsWUFDQSxZQUNBLGNBQ0EsaUJBRUNDLFFBQVEsaUJBQWtCLHFCQUFzQixvQkFBcUIsZ0JBQWlCLHdCQUF5QixzQkFBdUIsbUJBQW9CLGtCQUN2SixTQUFVQyxFQUFnQkMsRUFBb0JDLEVBQW1CQyxFQUFlQyxFQUF1QkMsRUFBcUJDLEVBQWtCQyxHQWExSSxRQUFTQyxHQUFTQyxHQUNkLE9BQVEsY0FBZSxjQUFlLFNBQVVDLEdBQzVDLE1BQU9BLEdBQVlDLEtBQUtGLEtBZGhDRixFQUFnQkssSUFBSSxnQ0FFcEJOLEVBQWlCTyxrQkFBaUIsR0FHbENULEVBQXNCVSxhQUFhLE9BRW5DWCxFQUFjWSxhQUFhQyxLQUFLLGtCQUNoQ2IsRUFBY1ksYUFBYUMsS0FBSywwQkFFaENmLEVBQW1CZ0IsVUFBVSxLQVE3QmpCLEVBQ0trQixNQUFNLFFBQ0hDLElBQUssSUFDTEMsWUFBYSxpQ0FFaEJGLE1BQU0sUUFDSEcsWUFBVSxFQUNWQyxTQUFVLHNCQUNWQyxTQUNJekIsT0FBUVUsRUFBUyxrQ0FHeEJVLE1BQU0sY0FDSEMsSUFBSyxTQUNMSyxXQUFZLGtCQUNaSixZQUFhLDZCQUNiRyxTQUNJRSxNQUFPLEtBQU0sT0FBUSxTQUFVQyxFQUFJQyxHQUMvQixHQUFJRixHQUFPRSxFQUFLQyxhQUNoQixJQUFJSCxFQUNBLE1BQU9DLEdBQUdHLFFBQVFDLFNBQVUsaUJBSzNDWixNQUFNLGVBQ0hDLElBQUssVUFDTEssV0FBWSxtQkFDWkosWUFBYSxnQ0FFaEJGLE1BQU0sY0FDSEMsSUFBSyxTQUNMSyxXQUFZLHNCQUNaSixZQUFhLCtCQUVoQkYsTUFBTSxXQUNIQyxJQUFLLFdBQ0xLLFdBQVksb0JBQ1pKLFlBQWEsa0NBQ2JHLFNBQ0l6QixPQUFRVSxFQUFTLHFDQUNqQmlCLE1BQU8sS0FBTSxPQUFRLFNBQVVDLEVBQUlDLEdBQy9CLEdBQUlGLEdBQU9FLEVBQUtDLGFBQ2hCLE9BQUtILEdBR0VBLEVBQUtNLFNBRkRMLEVBQUdHLFFBQVFDLFNBQVUsb0JBT2hENUIsRUFDSzhCLFdBQVUsR0FDVkMsV0FBVyxRQUV2QkMsS0FBSyxhQUFjLFNBQVUsU0FBVUMsRUFBWUMsR0FDaERELEVBQVdFLElBQUksb0JBQXFCLFNBQVVDLEVBQUtDLEVBQUlDLEVBQVVDLEVBQU1DLEVBQVlDLEdBQzNFQSxFQUFNYixTQUNOTSxFQUFPUSxHQUFHRCxFQUFNYixVQUVoQk0sRUFBT1EsR0FBRyxTQUFVQyxPQUFRRixFQUFNRSxjQUtsRGhELFFBQVFDLE9BQU8iLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vQ3JlYXRlZCBieSBNdWxpIG9uIDA5LU1heS0xNi5cclxuYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcclxuICAgICduZ0FuaW1hdGUnLFxyXG4gICAgJ25nVG91Y2gnLFxyXG4gICAgJ3VpLmJvb3RzdHJhcCcsXHJcbiAgICAndWkucm91dGVyJyxcclxuICAgICduZ1N0b3JhZ2UnLFxyXG4gICAgJ29jLmxhenlMb2FkJyxcclxuICAgICdhcHAuc2VydmljZXMnXHJcbl0pXHJcbiAgICAuY29uZmlnKFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJywgJyRodHRwUHJvdmlkZXInLCAnJGxvY2FsU3RvcmFnZVByb3ZpZGVyJywgJyRvY0xhenlMb2FkUHJvdmlkZXInLCAnJGNvbXBpbGVQcm92aWRlcicsICdiYXNlVXJsUHJvdmlkZXInLFxyXG4gICAgICAgIGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlciwgJGh0dHBQcm92aWRlciwgJGxvY2FsU3RvcmFnZVByb3ZpZGVyLCAkb2NMYXp5TG9hZFByb3ZpZGVyLCAkY29tcGlsZVByb3ZpZGVyLCBiYXNlVXJsUHJvdmlkZXIpIHtcclxuICAgICAgICAgICAgYmFzZVVybFByb3ZpZGVyLnNldCgnaHR0cHM6Ly9tZWFuYnAuaGVyb2t1YXBwLmNvbScpO1xyXG5cclxuICAgICAgICAgICAgJGNvbXBpbGVQcm92aWRlci5kZWJ1Z0luZm9FbmFibGVkKGZhbHNlKTtcclxuXHJcbiAgICAgICAgICAgIC8vJG9jTGF6eUxvYWRQcm92aWRlci5jb25maWcoe2RlYnVnOiB0cnVlfSk7XHJcbiAgICAgICAgICAgICRsb2NhbFN0b3JhZ2VQcm92aWRlci5zZXRLZXlQcmVmaXgoJ2FwcCcpO1xyXG5cclxuICAgICAgICAgICAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnand0SW50ZXJjZXB0b3InKTtcclxuICAgICAgICAgICAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnand0UmVzcG9uc2VJbnRlcmNlcHRvcicpO1xyXG5cclxuICAgICAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gbGF6eUxvYWQoZGVwZW5kZW5jaWVzKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gWyckb2NMYXp5TG9hZCcsICckJGFuaW1hdGVKcycsIGZ1bmN0aW9uICgkb2NMYXp5TG9hZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkb2NMYXp5TG9hZC5sb2FkKGRlcGVuZGVuY2llcyk7XHJcbiAgICAgICAgICAgICAgICB9XTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJHN0YXRlUHJvdmlkZXJcclxuICAgICAgICAgICAgICAgIC5zdGF0ZSgnaG9tZScsIHtcclxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvJyxcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2NvbXBvbmVudHMvc3RhdGljcy9ob21lLmh0bWwnXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnN0YXRlKCdhdXRoJywge1xyXG4gICAgICAgICAgICAgICAgICAgIGFic3RyYWN0OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiAnPHVpLXZpZXc+PC91aS12aWV3PicsXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IGxhenlMb2FkKCdjb21wb25lbnRzL2F1dGgvYXV0aC5taW4uanMnKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAuc3RhdGUoJ2F1dGgubG9naW4nLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2xvZ2luJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnbG9naW5DdHJsIGFzIHZtJyxcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2NvbXBvbmVudHMvYXV0aC9sb2dpbi5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXI6IFsnJHEnLCAnQXV0aCcsIGZ1bmN0aW9uICgkcSwgQXV0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXIgPSBBdXRoLmN1cnJlbnRVc2VyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3Qoe3JlZGlyZWN0OiAncHJvZmlsZSd9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnN0YXRlKCdhdXRoLnNpZ251cCcsIHtcclxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvc2lnbnVwJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnc2lnbnVwQ3RybCBhcyB2bScsXHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdjb21wb25lbnRzL2F1dGgvc2lnbnVwLmh0bWwnXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnN0YXRlKCdhdXRoLnJlc2V0Jywge1xyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9yZXNldCcsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Jlc2V0UGFzc0N0cmwgYXMgdm0nLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnY29tcG9uZW50cy9hdXRoL3Jlc2V0Lmh0bWwnXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnN0YXRlKCdwcm9maWxlJywge1xyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9wcm9maWxlJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncHJvZmlsZUN0cmwgYXMgdm0nLFxyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnY29tcG9uZW50cy9wcm9maWxlL3Byb2ZpbGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2R1bGU6IGxhenlMb2FkKCdjb21wb25lbnRzL3Byb2ZpbGUvcHJvZmlsZS5taW4uanMnKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlcjogWyckcScsICdBdXRoJywgZnVuY3Rpb24gKCRxLCBBdXRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXNlciA9IEF1dGguY3VycmVudFVzZXIoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdXNlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3Qoe3JlZGlyZWN0OiAnYXV0aC5sb2dpbid9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLiRwcm9taXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJGxvY2F0aW9uUHJvdmlkZXJcclxuICAgICAgICAgICAgICAgIC5odG1sNU1vZGUodHJ1ZSlcclxuICAgICAgICAgICAgICAgIC5oYXNoUHJlZml4KCchJyk7XHJcbiAgICAgICAgfV0pXHJcbiAgICAucnVuKFsnJHJvb3RTY29wZScsICckc3RhdGUnLCBmdW5jdGlvbiAoJHJvb3RTY29wZSwgJHN0YXRlKSB7XHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZUVycm9yJywgZnVuY3Rpb24gKGV2dCwgdG8sIHRvUGFyYW1zLCBmcm9tLCBmcm9tUGFyYW1zLCBlcnJvcikge1xyXG4gICAgICAgICAgICBpZiAoZXJyb3IucmVkaXJlY3QpIHtcclxuICAgICAgICAgICAgICAgICRzdGF0ZS5nbyhlcnJvci5yZWRpcmVjdCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2Vycm9yJywge3N0YXR1czogZXJyb3Iuc3RhdHVzfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XSk7XHJcblxyXG5hbmd1bGFyLm1vZHVsZSgnYXBwLmNvbXBvbmVudHMnLCBbXSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
